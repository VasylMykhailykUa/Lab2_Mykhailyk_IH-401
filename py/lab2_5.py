# -*- coding: utf-8 -*-
"""Lab2_5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12xrVqozm2Hpnr8rzUNxR3bE_GxFYXYR9

**Лабораторна №2**

Завдання 2.5. Класифікація даних лінійним класифікатором Ridge
"""

# Імпортуємо необхідні бібліотеки
import numpy as np
from sklearn.datasets import load_iris
from sklearn.linear_model import RidgeClassifier
from sklearn.model_selection import train_test_split

# Завантажуємо датасет Iris
iris = load_iris()

# Розділяємо дані на ознаки (X) та цільові значення (y)
X, y = iris.data, iris.target

# Ділимо вибірку на тренувальну і тестову (70%/30%)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)

# Створюємо і навчаємо Ridge-класифікатор
clf = RidgeClassifier(tol=1e-2, solver="sag")
clf.fit(X_train, y_train)

# Робимо прогноз на тестовій вибірці
y_pred = clf.predict(X_test)

# Імпортуємо метрики для оцінювання моделі
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, cohen_kappa_score, matthews_corrcoef, classification_report

# Виводимо значення основних метрик якості класифікації
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Precision:", precision_score(y_test, y_pred, average='weighted'))
print("Recall:", recall_score(y_test, y_pred, average='weighted'))
print("F1 Score:", f1_score(y_test, y_pred, average='weighted'))
print("Cohen's Kappa:", cohen_kappa_score(y_test, y_pred))
print("Matthews Correlation Coefficient:", matthews_corrcoef(y_test, y_pred))
print("\t\tClassification Report:\n", classification_report(y_test, y_pred))

# Будуємо та візуалізуємо матрицю плутанини
from sklearn.metrics import confusion_matrix
import seaborn as sns
import matplotlib.pyplot as plt

mat = confusion_matrix(y_test, y_pred)
sns.heatmap(mat.T, square = True, annot = True, fmt = 'd', cbar = False)
plt.xlabel('True label')
plt.ylabel('Predicted label')
plt.title('Confusion Matrix')

